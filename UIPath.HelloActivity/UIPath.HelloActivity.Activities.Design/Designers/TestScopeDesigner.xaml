<sap:ActivityDesigner x:Class="UiPath.HelloActivity.Activities.Design.Designers.TestScopeDesigner"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:activity="clr-namespace:UiPath.HelloActivity.Activities.Properties;assembly=UiPath.HelloActivity.Activities"
    xmlns:sa="http://schemas.microsoft.com/netfx/2009/xaml/activities"
    xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation"
    xmlns:p="clr-namespace:UiPath.HelloActivity.Activities.Design.Properties"
    xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"
    xmlns:sapc="clr-namespace:System.Activities.Presentation.Converters;assembly=System.Activities.Presentation"
    xmlns:converters="clr-namespace:UiPath.Shared.Activities.Design.Converters"
    xmlns:uip="clr-namespace:UiPath.Shared.Activities.Design.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    d:DataContext="{d:DesignInstance }">
    
    <sap:ActivityDesigner.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ActivityIconConverter x:Key="ActivityIconConverter" />
            <sapc:ArgumentToExpressionConverter x:Key="ArgumentToExpressionConverter" />
        </ResourceDictionary>
    </sap:ActivityDesigner.Resources>
 
    <sap:ActivityDesigner.Icon>
        <DrawingBrush Stretch="Uniform" Drawing="{Binding Path=ModelItem, Converter={StaticResource ActivityIconConverter}, ConverterParameter=pack://application:\,\,\,/UiPath.HelloActivity.Activities.Design;component/themes/icons.xaml}" />
    </sap:ActivityDesigner.Icon>
 
    <uip:ActivityDecoratorControl Style="{StaticResource ActivityDecoratorStyle}">
        <StackPanel>
            <Label Margin="0,0,0, 0"
                   Padding="0,0,0,0"
                   Content="{x:Static activity:Resources.TestScope_TestString_DisplayName}"
                   ToolTip="{x:Static activity:Resources.TestScope_TestString_Description}"/>
            <sapv:ExpressionTextBox ExpressionType="{ Binding ModelItem.Properties[TestString].PropertyType.GenericTypeArguments[0] }" 
                                    OwnerActivity="{ Binding Path=ModelItem }" 
                                    HintText="{ x:Static activity:Resources.TestScope_TestString_Description }" 
                                    UseLocationExpression="False">
                <sapv:ExpressionTextBox.Expression>
                    <Binding Path="ModelItem.TestString" Converter="{ StaticResource ArgumentToExpressionConverter }" Mode="TwoWay" ConverterParameter="In" UpdateSourceTrigger="PropertyChanged" />
                </sapv:ExpressionTextBox.Expression>
            </sapv:ExpressionTextBox>
            <Label Margin="0,0,0, 0"
                   Padding="0,0,0,0"
                   Content="{x:Static activity:Resources.TestScope_OtherString_DisplayName}"
                   ToolTip="{x:Static activity:Resources.TestScope_OtherString_Description}"/>
            <sapv:ExpressionTextBox ExpressionType="{ Binding ModelItem.Properties[OtherString].PropertyType.GenericTypeArguments[0] }" 
                                    OwnerActivity="{ Binding Path=ModelItem }" 
                                    HintText="{ x:Static activity:Resources.TestScope_TestString_Description }" 
                                    UseLocationExpression="True"> <!-- NOTE: OutArguments will not work with out this being set to true! -->
                <sapv:ExpressionTextBox.Expression>
                    <Binding Path="ModelItem.OtherString" Converter="{ StaticResource ArgumentToExpressionConverter }" Mode="TwoWay" ConverterParameter="Out" UpdateSourceTrigger="PropertyChanged" /> <!-- ConverterParameter needs to be set to 'Out' for OutArguments. -->
                </sapv:ExpressionTextBox.Expression>
            </sapv:ExpressionTextBox>
            <sap:WorkflowItemPresenter x:Uid="sad:WorkflowItemPresenter_1"
                                       AutomationProperties.AutomationId="Activity"
                                       DockPanel.Dock="Bottom"
                                       MinWidth="400"
                                       Margin="0,10,0,0"
                                       Item="{Binding Path=ModelItem.Body.Handler, Mode=TwoWay}"
                                       AllowedItemType="{x:Type sa:Activity}"
                                       HintText="{x:Static p:Resources.DropActivityHere}" />
        </StackPanel>
    </uip:ActivityDecoratorControl>
</sap:ActivityDesigner>
